<< 제어문 >>
제어문은 프로그램의 흐름을 제어하는 구문.
조건에 따라 혹은 반복적인 블록을 실행하는 등의 작업을 할 때 사용.
제어문은 크게 2가지로 나뉨
1. 조건문
- if (if 단독 사용)
- if ~ else
- if ~ elif ~ else

2. 반복문
- for문
- while문


<< 조건문 >>
if: 특정 조건이 참(True)일 때 코드 블록을 실행
  - 조건은 비교 연산자(==, !=, <, >, <=, >=)와 논리 연산자(and, or, not)를 사용하여 표현 가능

elif: 이전의 if 또는 elif 조건이 거짓(False)일 때 다른 조건을 검사
  - elif는 'else if'의 축약형
  - 이전 if 또는 elif 문의 조건이 거짓(False)일 때 다른 조건을 검사
  - 여러 elif 문을 사용하여 다양한 조건을 검사할 수 있음

else:
이전의 if 또는 elif 문의 조건이 모두 거짓일 때 실행할 코드 블록을 지정

if 안에 if를 넣어 중첩하여 사용 가능.
    if 조건 1:
      if 조건 1-1:
        조건 맞을 시 출력문
      else:
        조건 1-1에 맞지 않을 시 출력문
    elif 조건 2:
      if 조건 2-1:
        조건 2-1이 맞을 때 출력문
      elif 조건 2-2:
        조건 2-2가 맞을 때 출력문
      else:
        조건 2-1, 2-2가 맞지 않을 때 출력문
    else:
      위 케이스들에 모두 해당되지 않을 경우 출력문

리스트 안에 조건문을 넣어 보다 간단하게 코드 작성 가능.
  e.g. 하기 if 문을 []에 넣어 간단하게 해주기 
    score=70
    if score>=60:
      message="success"
    else:
      message="failure"
    print(message)

    # 간단하게 list 안에 넣을 경우 :
    ["success" if score>=60 else "failure" ]

<< 반복문 >>
for문: 
  - 정해진 range 안에서 반복
  - 일반적인 형식:
      for ~ in ~ :
        실행할 내용

*** 딕셔너리에서 value값만 추출하는 방법: 
      d={'a':97, 'b':98, 'c':99}
      for key in d:
        print(d[key], end=' ') # d의 각 키 값을 하나씩 추출하여 한 스페이스 간격으로 출력

while문:
  - 특정 조건에 맞을 때까지 무한 반복
  - 일반적인 형식:
      while 조건:
        실행할 내용

반복문 스킵 및 탈출:
반복문이 돌 때 특정 조건에서 해당 실행문을 스킵하고 싶다면 continue를,
특정 조건에서 반복문을 종료하고 싶다면 break를 사용.
  for문의 break 사용:
  e.g. 
      for i in range(1,11):
        if i < 6:
           print(i, end=' ')
      else:
           break

  for문의 continue 사용:
  e.g. 
      for i in number:
        if i==5:
          continue
        if i%5==0:
          print(i, end=' ')


============================================

<< 예외 처리 >>
코드를 실행하다 에러가 떴을 때 에러 페이지 대신 개발자의 의도대로 실해되도록 하는 방법
일반적인 형식:
  try:
    실행문 
  except 에러명:
    에러가 떴을 때 실행할 내용

  e.g.:
  while True: 
    try:
        number=int(input("정수를 입력하세요 : "))
        if number%2==1:
            print(f"입력한 숫자 {number}은/는 홀수입니다")
        else:
            print(f"입력한 숫자 {number}은/는 짝수입니다")
        break 
    except ValueError:
        print("정수가 아닌 값이 입력되었습니다. 정수로 다시 입력하세요.")
  ==> 정수가 입력되었으면 홀/짝 판별하고 끝남
      정수가 아닌 다른 것이 입력된 경우 에러 메세지가 뜨고 다시 정수를 입력하도록 유도

