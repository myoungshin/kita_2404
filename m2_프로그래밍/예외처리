에러와 예외는 다른 개념

에러(Error): 
- 신택스 자체의 오류로 코드를 수정해야함

예외(Exception):
- 코드 상 오류는 없으나 코드 실행 중 프로그램에 영향을 주는 이벤트가 발생, 프로그램 흐름에 방해를 줌
- 예외로 프로그램 흐름의 방해가 되지 않도록 사전에 처리 가능 

예외 유형: 
    NameError: 정의되지 않은 변수를 호출할 때 생긴다.
    TypeError: 연산이나 함수가 부적절한 유형의 객체에 적용될 때 발생한다.
    ValueError: 연산이나 함수가 적절하지 않은 값을 객체에 적용할 때 발생한다.
    IndexError: 리스트 등의 시퀀스에서 존재하지 않는 인덱스를 사용할 때 생긴다.
    KeyError: 딕셔너리에서 존재하지 않는 키를 사용할 때 발생한다.
    AttributeError: 존재하지 않는 속성이나 메서드를 호출할 때 생긴다.
    IOError 또는 OSError: 파일 입 출력 과정에서 에러가 생길 때 발생한다.
    ZeroDivisionError: 0으로 나눌 때 생긴다.
    ImportError: 모듈을 임포트할 수 없을 때 발생한다.
    StopIteration: 이터레이터에 더 이상의 아이템이 없을 때 next()를 호출하면 발생한다.
    MemoryError: 메모리 할당이 실패할 때 생긴다.
    RecursionError: 재귀 호출이 너무 깊어질 때 발생한다.

예외처리 방법:
try, except, else, fianlly 4가지 단어로 예외 처리를 컨트롤 가능
- try:
    try 코드 블록은 예외를 발생싴리 수 있는 코드도 포함
    코드가 오류를 일으킬 수 있다는 것을 '시도'하는 블록
- except:
    특정 예외 발생에 대해 어떻게 처리할 것인지 대응하는 코드
- else:
    예외가 발생하지 않을 경우 실행하는 코드
- finally:
    예외 유무와 상관없이 무조건 실행하는 코드

따라서, 아래의 조합으로 사용 가능:
1. try+except
2. try+except+else
3. try+except+else+finally
4. try+except+finally

